// <auto-generated />
using System;
using Darts.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Darts.Data.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221015103437_Issue3")]
    partial class Issue3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Darts.Data.Model.KonvertierungEntitys.Konvertierung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Typ")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Konvertierung");
                });

            modelBuilder.Entity("Darts.Data.Model.SpielerEntitys.Spieler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Vorname")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Spieler");
                });

            modelBuilder.Entity("Darts.Data.Model.TrainingEntitys.Training", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktiv")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("Darts.Data.Model.TrainingEntitys.TrainingSpieler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("AngemeldetAm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SpielerID")
                        .HasColumnType("integer");

                    b.Property<int>("TrainingID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("SpielerID");

                    b.HasIndex("TrainingID");

                    b.ToTable("TrainingSpieler");
                });

            modelBuilder.Entity("Darts.Data.Model.UserEntitys.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Darts.Data.Model.TrainingEntitys.TrainingSpieler", b =>
                {
                    b.HasOne("Darts.Data.Model.SpielerEntitys.Spieler", "Spieler")
                        .WithMany()
                        .HasForeignKey("SpielerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Darts.Data.Model.TrainingEntitys.Training", "Training")
                        .WithMany("Spieler")
                        .HasForeignKey("TrainingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
